//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BancoEntities1 : DbContext
    {
        public BancoEntities1()
            : base("name=BancoEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Beneficiario> Beneficiario { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<CuentaAhorro> CuentaAhorro { get; set; }
        public virtual DbSet<CuentaObjeto> CuentaObjeto { get; set; }
        public virtual DbSet<EstadoCuenta> EstadoCuenta { get; set; }
        public virtual DbSet<Moneda> Moneda { get; set; }
        public virtual DbSet<Movimiento> Movimiento { get; set; }
        public virtual DbSet<TipoCuentaAhorro> TipoCuentaAhorro { get; set; }
        public virtual DbSet<TipoDocumentoId> TipoDocumentoId { get; set; }
        public virtual DbSet<TipoMovimiento> TipoMovimiento { get; set; }
        public virtual DbSet<TipoParentesco> TipoParentesco { get; set; }
    
        public virtual int banco_dbo_actualizarDocumentoIdentificacionBeneficiario(string nuevoNumeroDocumentoId, Nullable<int> id)
        {
            var nuevoNumeroDocumentoIdParameter = nuevoNumeroDocumentoId != null ?
                new ObjectParameter("NuevoNumeroDocumentoId", nuevoNumeroDocumentoId) :
                new ObjectParameter("NuevoNumeroDocumentoId", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_actualizarDocumentoIdentificacionBeneficiario", nuevoNumeroDocumentoIdParameter, idParameter);
        }
    
        public virtual int banco_dbo_actualizarEmailBeneficiario(string nuevoEmail, Nullable<int> id)
        {
            var nuevoEmailParameter = nuevoEmail != null ?
                new ObjectParameter("NuevoEmail", nuevoEmail) :
                new ObjectParameter("NuevoEmail", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_actualizarEmailBeneficiario", nuevoEmailParameter, idParameter);
        }
    
        public virtual int banco_dbo_actualizarNombreBeneficiario(string nuevoNombre, Nullable<int> id)
        {
            var nuevoNombreParameter = nuevoNombre != null ?
                new ObjectParameter("NuevoNombre", nuevoNombre) :
                new ObjectParameter("NuevoNombre", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_actualizarNombreBeneficiario", nuevoNombreParameter, idParameter);
        }
    
        public virtual int banco_dbo_actualizarParentescoBeneficiario(Nullable<int> nuevoParentesco, Nullable<int> id)
        {
            var nuevoParentescoParameter = nuevoParentesco.HasValue ?
                new ObjectParameter("NuevoParentesco", nuevoParentesco) :
                new ObjectParameter("NuevoParentesco", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_actualizarParentescoBeneficiario", nuevoParentescoParameter, idParameter);
        }
    
        public virtual int banco_dbo_actualizarPorcentajeBeneficiario(Nullable<int> nuevoPorcentaje, Nullable<int> id, Nullable<int> idCuentaAhorro)
        {
            var nuevoPorcentajeParameter = nuevoPorcentaje.HasValue ?
                new ObjectParameter("NuevoPorcentaje", nuevoPorcentaje) :
                new ObjectParameter("NuevoPorcentaje", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idCuentaAhorroParameter = idCuentaAhorro.HasValue ?
                new ObjectParameter("IdCuentaAhorro", idCuentaAhorro) :
                new ObjectParameter("IdCuentaAhorro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_actualizarPorcentajeBeneficiario", nuevoPorcentajeParameter, idParameter, idCuentaAhorroParameter);
        }
    
        public virtual int banco_dbo_actualizarTelefonoBeneficiario(string nuevoTelefono, Nullable<int> id)
        {
            var nuevoTelefonoParameter = nuevoTelefono != null ?
                new ObjectParameter("NuevoTelefono", nuevoTelefono) :
                new ObjectParameter("NuevoTelefono", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_actualizarTelefonoBeneficiario", nuevoTelefonoParameter, idParameter);
        }
    
        public virtual int banco_dbo_agregarBeneficiario(string idTipoDocumentoId, string parentesco, string numeroCuenta, string documentoId, string nombre, Nullable<int> porcentaje, Nullable<bool> activo, Nullable<System.DateTime> fechaNacimiento, string email, string telefono)
        {
            var idTipoDocumentoIdParameter = idTipoDocumentoId != null ?
                new ObjectParameter("IdTipoDocumentoId", idTipoDocumentoId) :
                new ObjectParameter("IdTipoDocumentoId", typeof(string));
    
            var parentescoParameter = parentesco != null ?
                new ObjectParameter("parentesco", parentesco) :
                new ObjectParameter("parentesco", typeof(string));
    
            var numeroCuentaParameter = numeroCuenta != null ?
                new ObjectParameter("NumeroCuenta", numeroCuenta) :
                new ObjectParameter("NumeroCuenta", typeof(string));
    
            var documentoIdParameter = documentoId != null ?
                new ObjectParameter("DocumentoId", documentoId) :
                new ObjectParameter("DocumentoId", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("Porcentaje", porcentaje) :
                new ObjectParameter("Porcentaje", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_agregarBeneficiario", idTipoDocumentoIdParameter, parentescoParameter, numeroCuentaParameter, documentoIdParameter, nombreParameter, porcentajeParameter, activoParameter, fechaNacimientoParameter, emailParameter, telefonoParameter);
        }
    
        public virtual ObjectResult<banco_dbo_consultarEstadoCuenta_Result> banco_dbo_consultarEstadoCuenta(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<banco_dbo_consultarEstadoCuenta_Result>("banco_dbo_consultarEstadoCuenta", idParameter);
        }
    
        public virtual ObjectResult<banco_dbo_ejecutarInserciones_Result> banco_dbo_ejecutarInserciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<banco_dbo_ejecutarInserciones_Result>("banco_dbo_ejecutarInserciones");
        }
    
        public virtual int banco_dbo_eliminarBeneficiario(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_eliminarBeneficiario", idParameter);
        }
    
        public virtual int banco_dbo_insertarBeneficiarioXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_insertarBeneficiarioXml");
        }
    
        public virtual int banco_dbo_insertarClienteXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_insertarClienteXml");
        }
    
        public virtual int banco_dbo_insertarCuentaAhorroXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_insertarCuentaAhorroXml");
        }
    
        public virtual int banco_dbo_insertarCuentaObjetoXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_insertarCuentaObjetoXml");
        }
    
        public virtual int banco_dbo_insertarEstadoCuentaXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_insertarEstadoCuentaXml");
        }
    
        public virtual int banco_dbo_insertarMonedaXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_insertarMonedaXml");
        }
    
        public virtual int banco_dbo_insertarTipoCuentaAhorroXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_insertarTipoCuentaAhorroXml");
        }
    
        public virtual int banco_dbo_insertarTipoDocumentoIdXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_insertarTipoDocumentoIdXml");
        }
    
        public virtual int banco_dbo_insertarTipoParentescoXml()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_insertarTipoParentescoXml");
        }
    
        public virtual ObjectResult<banco_dbo_limpiarTablas_Result> banco_dbo_limpiarTablas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<banco_dbo_limpiarTablas_Result>("banco_dbo_limpiarTablas");
        }
    
        public virtual int banco_dbo_actualizarFechaNacimientoBeneficiario(Nullable<System.DateTime> nuevaFechaNacimiento, Nullable<int> id)
        {
            var nuevaFechaNacimientoParameter = nuevaFechaNacimiento.HasValue ?
                new ObjectParameter("NuevaFechaNacimiento", nuevaFechaNacimiento) :
                new ObjectParameter("NuevaFechaNacimiento", typeof(System.DateTime));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_actualizarFechaNacimientoBeneficiario", nuevaFechaNacimientoParameter, idParameter);
        }
    
        public virtual int banco_dbo_consultarBeneficiariosCuenta(string numeroCuenta)
        {
            var numeroCuentaParameter = numeroCuenta != null ?
                new ObjectParameter("numeroCuenta", numeroCuenta) :
                new ObjectParameter("numeroCuenta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_consultarBeneficiariosCuenta", numeroCuentaParameter);
        }
    
        public virtual int banco_dbo_Login(string usuario, string contrasena)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("banco_dbo_Login", usuarioParameter, contrasenaParameter);
        }
    }
}
